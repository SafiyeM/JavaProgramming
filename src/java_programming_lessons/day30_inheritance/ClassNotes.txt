Java Programming Day30

Topics: OOP Inheritance
			Constructor
			Types of Inheritance

package name: day30_inheritance

Warmup tasks:
	1. Create a named Phone:
				Variables:
					brand, model, size, price, color

				Encapsulate all the fields
					Conditions:
						1. price can not be zero or negative
						2. color can only be set to:
								{"Black", "White", "Silver", "Gold", "Pink"}

				Add a constructor that can set all the fields

				Methods:
					call(long phoneNumber)
					text(long phoneNumber)
					toString()

	2. Create the following subclasses of Phone:

			2.1 Iphone:
					Extra methods:
						faceTime(phoneNumber)
						faceTile(email)

			2.2 Samsung:
					Extra methods:
						freeze()

			2.3 Nokia:
					Extra methods:
						selfDefense()



OOP Inheritance: to build IS A relationship between the classes (parent/child, super/sub)

				easiest way to get rich ===> extends

				Child class (sub): can inherit all the variables & methods that are accessible/visible from the parent class

				Parent class (super): can NOT inherit anything from child class. Contains all the common features (variables/methods) for all child classes

			***	Why Parent class can not inherit from child class?

			->	Parent and child class can not have the same name. If they have different names, Constructors must have the different names as well. Constructor's name has to be same name with the class name all the time.

				Class A(child) extends Class B(parent)

				Advantages:
					fewer codes
					improves the re-usability
					clean
					less memory usage
					easy to maintain


				One class can ONLY extend a class
				One class can be extended by MULTIPLE classes
















