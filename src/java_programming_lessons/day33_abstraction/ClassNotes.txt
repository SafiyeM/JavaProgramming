Java Programming Day33

Topics: OOP Abstraction
			- Abstract Method
			- Abstract Class

Package name: day33_abstraction

Warmup tasks:
	1. Create a subclass of Person (from day32 package) named CydeoDevStudent (final)
			Extra Variables:
				id (final), batchName, batchNumber, programmingLanguage(static & final)

			Extra conditions:
					1. Age has to be at least 18 years old
					2. batchName can ONLY be set to "Zero to Hero" or "Alumni Dev"
					3. batchNumber can not be set to zero or negative

			Override the eat() & drink() methods and include the programmingLanguage variable in methods body

			Override the toString Method and include the id, batchName, batchNumber variables



OOP Abstraction:
		1. abstract method
		2. abstract class
		3. interface
		4. extends vs implements


	Parent class' abstract methods must be overridden in child (non-abstract) class



methods:

	public static void methodName(Parameters) { }

What is the purpose of having a method?

-Everytime when we call the method, we make a group of code fragment/implementation which is going to perform a task for us.
-Every single method must have an implementation in its body, otherwise the method is useless, there is no point to creat a method without an implementation.
-However, abstract method does not have any implementation in its body beside it does not have a body.

How can we give the implementation to the ABSTRACT METHOD?
-In order to give an implementation that are needed to perform a task, we give the implementation through the METHOD OVERRIDING in SUBCLASSES. So eventually the abstract method will have an implementation in subclasses.

What if CHILD class NON-ABSTRACT?

In this case, non-abstract class can never have abstract methods, child class can not inherit the abstract parent class as it is. If it is a non-abstract class, every single method must have a body.
In order to give BODY of PARENTS' CLASS'S ABSTRACT METHOD IN CHILD CLASS we OVERRIDE:

ABSTRACT METHOD is meant to be OVERRIDDEN
We can not include static, final and private keywords, when we create an abstract method
STATIC, FINAL & PRIVATE METHODS can NOT be OVERRIDDEN, because they can not be inherited

How many times can we override the abstract class?
It depends on the number of concrete classes
Concrete class : non-abstract class extends the abstract class (the class you create an object from)
All Concrete Classes have to override the abstract method of the parent class


employeeTask

	Employee:
		Variables:
			name, age, gender, id, jobTitle, salary ....

		Methods:
		  abstract work();

    Teacher:
    	work(){ teaching }


	Developer:
		work() { coding }

	Tester:
		work(){ testing }

	Driver:
		work() { driving }

	...


